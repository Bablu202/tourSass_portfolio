sass - block level boxes
 display:block



BEM 
Block {}
Block__element{}
Block__element-modifier{}

-----------------------------------------------------------
sass
7-1 pattern
./base - 
./components
./layouts
./pages
./themes
./abstracts - where code doenst output any css such as varibles
./vendors - like third party css goes

--------------------------------------------------------------
sass
Varibles (fonts, colors)
Nesting
operators (mathematical operations)
Partials and imports (css in different files and import it into one)
Mixins (reusable chunks of code)
Functions 
Extends (inherit)
---------------------------------------------------------------
Varibles 
$color-primary : #fff
scss nesting ---------------------------------------
.nav{
{
-----
	ul
		----
			&:first-child{
				----
			}
	}
}


float broke objects fix

::after{
	content: ''
	clear: both
	display : table
}

--background color darken
background-color : darken($color-varible, 5%)


#Mixins
@mixin clearfix(arguments){

&::after{
	content: ''
	display : table
	clear: both
}


userit any where
@include clearfix


//functions in scss

//extends - 

%btn-styles{
	paste all the styles
}

@extend %btn-style 	// and add more styles

----------------------------------------------



principles of responsive design

-fluid layouts		-	viewport - % or vh vw
-responsive units	-	rem instead of px
-flexible images	-	% or max width 
-media queries		-	view port width 



*fluid layouts 	-	float - flex - grid
	

*grid	
//16.10.2023
display:grid;
row in x direction 
column in y direction 
///

Expliciet - that we decleared
implicet - that created automatically

//grid basis

display : grid;
grid-template-row: repeat(2, 150px) || repeat(2, 1fr) || 150px 150px;
grid-template-column : same as row

grid-auto-flow: row || column;
grid-auto-columns : 1fr || .5fr || 150px;
grid-auto-rows: same as columns;

//arrainging Grids 
grid-row : 2 / span3 || 1/-1 || string from grid areas;
grid-column: same as row

Align grids to area : 

justify-items : center ,start,end,space-between, space-around, space-evenly;

align-items : center 


//Aligning Tracks

justify-content : center ,start,end,space-between, space-around, space-evenly;

align-content : center 

///auto-flow

grid-auto-flow : row dense; // same for column dense to populate all spaces.


///////////*********//////////

min-contet max-content minmax()

grid-template-rows: repeat(2, minmax(150px, min-content))
grid-template-rows: repeat(auto-fill 100px) creates 100px rows with extra 
						emptys spaces
grid-template-rows: repeat(auto-fit 100px) create exact rows needed.
//*/*/*/*/*/*//

using both
grid-template-rows:repeat(auto-fit, minmax(100px, 1fr))




